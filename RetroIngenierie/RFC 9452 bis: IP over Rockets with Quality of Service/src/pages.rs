use aes::{
    Aes192,
    cipher::{BlockDecryptMut, KeyIvInit, block_padding::Pkcs7},
};
use cbc::Decryptor;
use rocket::{
    form::Form,
    http::CookieJar,
    request::{FromRequest, Outcome, Request},
    response::content::RawHtml,
};
use rocket_dyn_templates::{Template, context};
use serde::Serialize;

use crate::{insecurity, security};

#[derive(Serialize)]
pub struct Referer {
    url: Option<String>,
}

#[rocket::async_trait]
impl<'r> FromRequest<'r> for Referer {
    type Error = std::convert::Infallible;

    async fn from_request(request: &'r Request<'_>) -> Outcome<Self, Self::Error> {
        let rq = request.headers().get("referer").next();

        match rq {
            Some(url) => Outcome::Success(Referer {
                url: Some(url.to_string()),
            }),
            None => Outcome::Success(Referer { url: None }),
        }
    }
}

#[get("/")]
pub fn index() -> Template {
    Template::render("index", ())
}

#[get("/flag?<fake>")]
pub fn flag(fake: Option<bool>, cookies: &CookieJar) -> Result<Template, RawHtml<String>> {
    let flag = if let Some(false) = fake {
        insecurity::deobfuscate(b"\x6b\x57\x43\x15\x60\x5a\x7b\x56\x48\x50\x49\x19\x5a\x9d\x6b\x71\x58\x53\x46\xd0\x33\xf7\x61\x92\x48\x50\x9a\x46\xf4\xd4\x32\xc2\x45\x47\x43\x16\x60\x14\x60\x56\x58\x42\x4d\x1a\x5b\xdc\x32\x40\x09\xb3\x49\x15\x90\xd0\x63\x46\x1f\x16\x4e\x53\x51\x52\x18\x9c".to_vec(), 5)
    } else {
        insecurity::deobfuscate(b"\x7e\x50\x49\x12\x61\xc6\x58\x92\x41\x5a\x08\x56\x52\xda\x62\xc0\x4d\xd0\x45\xf6\x33\x5e\xf5\x1b\x5f\x1c\x1e\x02\x19\xd0\x32\xc2".to_vec(), 0)
    };
    if let (Some(cookie), Some(false)) = (cookies.get("mucho secret"), fake) {
        if cookie.value() == "cm9ja2V0ID0gdnJvb20gdnJvb20gPSBmYXN0ID0gZ29vZCBmb3IgaW50ZXJuZXQ=" {
            return Err(RawHtml(insecurity::deobfuscate(b"\x15\x66\x60\x76\x6e\xfa\x33\xf6\x6c\x5e\x3a\x1a\x09\x40\x32\xda\x15\x0c\x14\x1b\x3d\xd8\x7a\xc6\x59\x4c\x59\x49\x43\x50\x53\x52\x45\x5e\x5e\x27\x72\x0a\x5a\x56\x4a\x57\x4c\x13\x33\x14\x7a\x56\x4c\x4c\x44\x5b\x18\xdc\x61\x40\x58\x4c\x58\x49\x18\xd0\x42\xde\x4c\x4c\x5f\x7d\x71\x0a\x73\xd6\x4d\x50\x08\x15\x33\x3e\x6b\x8c\x15\x1f\x44\x3a\x59\x0a\x7a\x02\x43\x47\x08\x5a\x60\x5a\x53\x92\x44\x5e\x08\x5a\x7a\x5e\x58\x92\x4d\x1e\x12\x1e\x33\xc6\x53\x40\x18\x0c\x08\x04\x3d\x5c\x0a\x1c\x09\x5b\x08\x13\x41\x08\x32\x92\x58\x1e\x42\x02\x71\x16\x52\x0e\x4c\x5e\x0a\x57\x52\xd4\x73\x58\x17\x50\x1f\x15\x0b\x14\x3c\x92\x4d\x50\x08\x7d\x33\x0a\x7b\xc4\x09\x46\x5e\x03\x58\xc0\x0a\xd0\x09\x5b\x5b\x1b\x70\xd6\x59\xdc\x14\x13\x18\x12\x78\x5c\x30\x50\x18\x1e\x42\x5a\x43\xf8\x30\x8c\x4c\x47\x44\x57\x43\x9a\x60\x8e\x5e\x50\x08\x15\x33\x3e\x58\x8c\x15\x42\x16\x1e\x43\x46\x61\x50\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x46\x5f\x56\x7a\x5a\x50\x46\x5f\x17\x4d\x52\x5b\xda\x32\xc6\x76\x58\x08\x1b\x3a\x58\x71\x56\x52\x50\x08\x15\x33\x14\x3c\x92\x09\x50\x4e\x15\x7a\x14\x32\x92\x09\x03\x4b\x1e\x19\x5c\x3a\xc6\x5d\x5b\x44\x3b\x60\xc6\x73\x40\x1f\x53\x5e\x03\x7a\x5a\x71\x5c\x42\x5e\x4b\x12\x52\xc6\x3a\x90\x45\x59\x53\x1c\x33\x16\x53\xd6\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x50\x08\x15\x33\x14\x32\x92\x09\x1c\x5c\x46\x70\xdc\x42\xda\x48\x03\x1e\x1e\x43\x78\x61\x40\x43\x57\x0a\x43\x3b\xda\x53\x5e\x42\x46\x4c\x56\x52\xd0\x53\xde\x0b\x50\x08\x15\x33\x3e\x3b\x08\x09\x50\x08\x15\x33\x14\x32\x92\x54\x57\x53\x46\x33\x58\x32\x56\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x50\x08\x15\x33\x14\x32\x92\x09\x1c\x5c\x46\x70\xdc\x42\xda\x48\x03\x1e\x1e\x43\x78\x61\x40\x48\x03\x5c\x55\x52\x1c\x52\xd6\x4c\x10\x13\x13\x3a\xd0\x71\xc6\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x4f\x08\x15\x3d\x14\x32\x92\x09\x50\x55\x15\x33\x14\x32\x92\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x5e\x08\x4f\x52\x4e\x62\x46\x14\x47\x4d\x56\x5a\xda\x32\xd6\x5f\x46\x5c\x12\x56\xd2\x42\x9c\x4c\x32\x79\x03\x6a\x5a\x5b\x56\x4d\x12\x4d\x5b\x61\xc0\x3a\x90\x48\x57\x19\x1b\x31\x56\x79\x52\x12\x50\x08\x15\x33\x14\x3c\x92\x09\x50\x59\x47\x3b\xda\x32\xd4\x09\x50\x14\x4c\x7a\x04\x0b\x92\x00\x09\x59\x45\x33\x84\x20\x98\x1a\x38\x08\x4e\x33\x14\x39\x1a\x09\x50\x08\x15\x33\x14\x32\x92\x09\x5e\x40\x1b\x4c\xd0\x32\x50\x43\x4d\x4c\x15\x33\xda\x59\xc6\x5e\x1e\x1e\x12\x43\xd8\x71\x46\x4a\x57\x5c\x03\x56\xd4\x60\x56\x4c\x58\x4c\x03\x31\x5a\x5b\x56\x58\x38\x08\x4c\x33\x9c\x40\x90\x09\x50\x08\x15\x33\x14\x32\x92\x09\x5e\x40\x1b\x4c\xd0\x32\x50\x43\x13\x49\x59\x5b\xda\x59\xc6\x42\x46\x49\x46\x19\xdc\x61\xfe\x4d\x57\x5c\x56\x5b\x16\x52\x9a\x0b\x50\x08\x15\x33\x3e\x3b\x08\x09\x50\x08\x15\x33\x14\x32\x92\x4a\x42\x5f\x6a\x61\x58\x53\xde\x45\x13\x59\x5b\x5b\xda\x59\x9c\x4a\x46\x4f\x15\x58\x88\x79\x92\x4e\x57\x5c\x56\x5b\xea\x5a\x56\x12\x50\x08\x15\x33\x14\x3c\x92\x09\x50\x45\x15\x63\x14\x32\x92\x53\x53\x40\x59\x63\xd0\x68\xde\x4c\x5b\x4c\x1f\x5b\xf6\x58\xd6\x19\x2f\x42\x1b\x63\x58\x71\x56\x5e\x38\x08\x4c\x33\x9c\x42\x5c\x09\x50\x3a\x15\x4a\x14\x32\x92\x09\x50\x08\x15\x33\x14\x32\x92\x4f\x5b\x5e\x03\x58\xd6\x43\xdc\x09\x1b\x19\x56\x3b\xd0\x71\xda\x09\x50\x08\x15\x33\x14\x69\xb8\x09\x50\x45\x15\x33\x14\x32\x92\x5f\x1b\x4a\x16\x72\xd0\x70\xc0\x5d\x56\x4b\x15\x58\x88\x53\x92\x44\x1c\x4d\x03\x50\x5a\x5b\x56\x45\x57\x44\x1a\x59\xd0\x57\xde\x6b\x10\x5e\x1d\x42\x50\x6b\x7a\x4b\x53\x5c\x5e\x71\xd4\x60\x56\x4c\x50\x08\x7d\x33\x8e\x30\x1a\x09\x50\x08\x15\x33\x14\x32\x92\x09\x50\x08\x0e\x0a\x50\x70\x5c\x4d\x57\x44\x1a\x59\xc0\x59\x50\x1f\x4b\x4d\x47\x64\xd0\x63\x46\x5d\x02\x0a\x5a\x3b\x40\x53\x50\x4b\x59\x3a\x55\x28\xcc\x59\xd6\x09\x50\x08\x15\x33\x14\x32\x92\x09\x53\x44\x1b\x60\x14\x32\x92\x09\x56\x1e\x5a\x6a\x56\x0b\x92\x4a\x02\x5e\x13\x52\x58\x7a\x5a\x72\x1c\x58\x0e\x70\x50\x70\x5c\x58\x57\x4d\x1b\x5a\xf0\x5a\xd6\x5f\x1e\x1d\x02\x43\xda\x42\x70\x00\x50\x08\x15\x33\x3e\x4f\x08\x09\x50\x08\x15\x33\x14\x32\x92\x58\x53\x44\x1b\x60\x1c\x50\x92\x1f\x3e\x5d\x12\x72\x50\x58\x5c\x4c\x50\x60\x08\x31\x88\x32\x0e\x0b\x50\x08\x7d\x33\xce\x3b\x92\x09\x50\x08\x15\x33\x14\x32\x92\x09\x5e\x43\x15\x72\x14\x32\x92\x45\x1f\x4d\x1a\x41\xd0\x18\xc0\x19\x50\x08\x15\x33\x3e\x3b\x08\x09\x50\x08\x15\x33\x14\x32\x92\x54\x50\x08\x15\x33\x14\x3c\x92\x09\x50\x4d\x15\x70\x14\x32\x92\x5d\x50\x75\x08\x6c\x14\x5a\x40\x1f\x57\x4b\x56\x19\xdc\x61\xde\x48\x1e\x42\x02\x71\x1c\x5a\xde\x4c\x5e\x1e\x57\x52\xd4\x73\x58\x4a\x02\x5e\x13\x52\x58\x7a\x5a\x18\x50\x08\x15\x33\x14\x29\xb8\x09\x50\x4b\x15\x33\x14\x32\x92\x4c\x4d\x4b\x15\x33\xc6\x5a\xde\x4c\x5f\x40\x59\x72\xc6\x5a\xde\x19\x50\x1e\x49\x70\x88\x71\x92\x4a\x7e\x43\x46\x7a\xc6\x5a\x52\x45\x46\x59\x5b\x72\xda\x18\x50\x5f\x57\x4d\x46\x5b\x16\x61\x9a\x4a\x59\x13\x55\x3a\x50\x42\x56\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x16\x42\x15\x58\x14\x32\x92\x5c\x50\x08\x16\x0a\x40\x56\x52\x5f\x1f\x5d\x73\x61\x14\x53\x44\x6d\x59\x3a\x1d\x28\xd4\x73\xc6\x09\x50\x08\x15\x33\x14\x32\x92\x09\x57\x5c\x56\x5b\x14\x32\x92\x42\x77\x4b\x47\x72\xda\x18\xd4\x59\x50\x19\x19\x7a\xd0\x3a\x9a\x09\x1f\x5d\x53\x61\x14\x0b\x8c\x6d\x53\x40\x59\x63\xd4\x73\xc6\x4c\x5c\x4d\x1e\x33\x1c\x58\xd6\x18\x50\x08\x15\x33\x3e\x3b\x08\x09\x50\x08\x15\x33\x14\x32\x92\x4f\x58\x1f\x1f\x31\xd6\x53\xc6\x4f\x5c\x53\x55\x33\xd2\x5a\x52\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x50\x08\x15\x33\x14\x32\x92\x09\x1f\x12\x1f\x53\x40\x5b\x56\x09\x66\x1c\x66\x31\xfa\x30\xe2\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x50\x08\x15\x33\x14\x32\x92\x09\x08\x4e\x0e\x33\x50\x70\x5c\x5e\x46\x1c\x16\x72\x70\x60\x5e\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x4f\x1e\x15\x3a\x14\x32\x92\x45\x53\x51\x1d\x60\x5a\x7a\x56\x5f\x03\x5f\x12\x63\x46\x71\x92\x5f\x0c\x53\x08\x33\x14\x61\x56\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x50\x08\x15\x33\x14\x32\x92\x09\x5e\x51\x07\x72\xc6\x52\x5a\x09\x13\x5d\x5a\x42\x50\x0b\x92\x4c\x02\x49\x56\x52\x1a\x58\xc6\x45\x5f\x5e\x12\x52\x58\x53\x76\x45\x59\x3a\x55\x28\x44\x3a\x90\x09\x50\x08\x15\x33\x14\x32\x92\x09\x50\x08\x15\x33\x14\x32\x92\x4d\x53\x1e\x1b\x6a\x44\x7b\x40\x58\x66\x50\x47\x52\xd0\x58\xdc\x45\x07\x59\x16\x72\x14\x32\x0e\x45\x42\x5e\x46\x58\xd0\x32\xc0\x42\x4a\x18\x12\x43\x40\x53\x9c\x18\x50\x08\x15\x33\x14\x29\xb8\x09\x50\x08\x15\x33\x14\x32\x92\x09\x56\x1e\x5a\x6a\x56\x32\x92\x48\x56\x58\x5b\x74\xd0\x62\xc2\x58\x5b\x40\x13\x60\x1c\x5a\xd6\x5d\x38\x08\x4c\x33\x9c\x73\x4a\x09\x50\x08\x15\x33\x14\x32\x92\x09\x50\x08\x7d\x33\x9c\x32\x4e\x09\x4f\x08\x15\x3d\x14\x32\x92\x09\x03\x42\x58\x70\x08\x32\x92\x58\x50\x08\x7d\x33\x0a\x62\xc6\x09\x5e\x16\x0e\x52\x40\x0a\x40\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x50\x3a\x0e\x68\x50\x70\x5c\x09\x50\x08\x15\x33\x14\x32\x92\x09\x1f\x1d\x57\x6b\x14\x32\x92\x42\x17\x08\x5b\x29\xdc\x7b\xc8\x4b\x02\x4a\x12\x1a\x50\x59\xc0\x5e\x50\x08\x15\x33\x3e\x6a\x08\x09\x50\x08\x15\x33\x14\x32\x92\x46\x08\x01\x1f\x33\x40\x7b\xd6\x01\x38\x08\x4c\x33\xc2\x22\xc4\x09\x50\x08\x15\x33\x14\x32\x92\x09\x17\x44\x1e\x7b\xd0\x32\xda\x13\x06\x13\x05\x7b\x04\x32\x02\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x5f\x42\x15\x72\x14\x32\x92\x4e\x40\x3a\x15\x28\x0e\x7b\xdc\x09\x50\x08\x15\x33\x14\x32\x92\x09\x53\x4c\x07\x53\x14\x32\x92\x58\x40\x01\x15\x33\x0e\x58\x54\x1f\x38\x08\x4c\x33\xd8\x03\x56\x09\x50\x08\x15\x33\x14\x32\x92\x09\x1b\x42\x56\x50\xd4\x32\xd0\x5e\x5b\x49\x18\x5a\x50\x43\xdc\x4e\x02\x18\x02\x5b\x14\x53\x88\x59\x08\x1f\x46\x18\x44\x42\xc6\x46\x03\x1e\x12\x72\x1a\x41\x44\x58\x53\x1f\x43\x61\x9a\x58\xc6\x4c\x46\x42\x46\x58\x9a\x61\x52\x48\x5f\x4f\x1e\x72\x9a\x51\x56\x4c\x53\x5d\x46\x4c\xd0\x61\x1c\x44\x57\x59\x1a\x53\xdc\x5a\xc6\x48\x17\x43\x16\x52\xd8\x19\x5a\x1e\x1d\x01\x44\x23\x06\x20\x82\x1e\x5b\x49\x07\x61\xc6\x73\x6c\x5d\x1e\x43\x5a\x50\xd8\x4d\x52\x45\x47\x49\x5a\x60\x5c\x4d\xc6\x5f\x44\x11\x45\x01\x9a\x52\x40\x03\x41\x4d\x18\x1a\x00\x22\x00\x5f\x1d\x77\x77\x76\xf2\x51\x1e\x62\x5e\x69\x16\x4c\x46\x62\x5a\x5c\x46\x64\x46\x4c\xd2\x59\xdc\x59\x1e\x43\x16\x53\xc6\x59\x46\x76\x53\x43\x1b\x61\x58\x62\x5a\x1f\x09\x08\x1c\x3d\xd2\x78\xc2\x09\x50\x08\x15\x33\x14\x32\x92\x09\x13\x4f\x16\x78\x56\x32\x92\x43\x5d\x59\x13\x60\x5a\x59\x46\x53\x1f\x4d\x56\x41\x14\x53\x88\x43\x50\x08\x15\x33\x14\x29\xb8\x09\x50\x4a\x15\x33\x14\x32\x92\x48\x1f\x5e\x47\x42\xd2\x71\x58\x4d\x1f\x12\x1b\x61\xda\x1b\x50\x09\x1b\x3a\x56\x28\xd4\x70\xde\x09\x50\x08\x15\x33\x14\x32\x92\x09\x53\x5b\x57\x70\x14\x32\x92\x4e\x56\x42\x5b\x1a\xc0\x60\x5c\x4c\x08\x5e\x03\x33\xd4\x62\x56\x5e\x57\x44\x07\x72\xd0\x1b\xc0\x12\x50\x08\x15\x33\x14\x3c\x92\x09\x50\x49\x15\x71\x14\x32\x92\x4a\x47\x4c\x5a\x59\x46\x79\x54\x1c\x46\x5f\x1e\x7a\xc6\x62\x5c\x5f\x1e\x4d\x12\x43\xd6\x28\x92\x43\x50\x08\x15\x33\x14\x29\xb8\x09\x50\x4b\x15\x33\x14\x32\x92\x5e\x50\x58\x4d\x40\x46\x5a\x5c\x58\x50\x08\x7d\x33\x8e\x42\x56\x09\x50\x08\x15\x33\x14\x32\x92\x09\x5d\x49\x03\x51\x5a\x50\x5c\x5c\x50\x49\x4d\x60\xcc\x7b\xde\x5f\x02\x4e\x12\x7a\xc6\x61\x1e\x12\x50\x08\x15\x33\x14\x3c\x92\x09\x50\x08\x15\x33\x3e\x32\x4e\x09\x47\x44\x57\x43\x14\x32\x92\x5e\x50\x08\x7d\x33\xce\x58\x92\x09\x50\x08\x15\x33\x14\x32\x92\x09\x46\x5f\x1e\x7a\xc6\x62\x5c\x5f\x4a\x4c\x1e\x52\x52\x28\x92\x12\x50\x08\x15\x33\x14\x3c\x92\x09\x50\x4d\x15\x5b\x14\x32\x92\x4f\x40\x13\x00\x12\x14\x42\x88\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x46\x40\x15\x58\x14\x32\x92\x13\x09\x08\x10\x3d\x80\x32\x8a\x09\x50\x08\x15\x33\x14\x32\x92\x09\x53\x43\x47\x59\x40\x32\x92\x4f\x50\x42\x4d\x43\xd8\x59\xc0\x48\x46\x18\x16\x52\x58\x58\x40\x1c\x50\x05\x19\x1a\x90\x03\x82\x01\x50\x08\x7d\x33\x8e\x13\x1a\x09\x4f\x08\x15\x3d\x14\x32\x92\x09\x50\x4c\x15\x33\x14\x32\x92\x58\x12\x4d\x5b\x61\xc0\x40\x10\x48\x57\x53\x1b\x33\x56\x79\x52\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x42\x43\x15\x58\x14\x32\x92\x58\x08\x4e\x5b\x33\xda\x42\x5a\x58\x38\x08\x4c\x33\x50\x6a\x56\x09\x50\x08\x15\x33\x14\x32\x92\x09\x46\x08\x53\x29\xd0\x32\xde\x04\x50\x08\x7d\x33\x8e\x22\x16\x09\x50\x08\x15\x33\x14\x32\x92\x09\x50\x00\x4d\x02\x44\x42\x5c\x0c\x50\x08\x15\x33\x14\x29\xb8\x09\x50\x44\x15\x33\x14\x32\x92\x43\x1f\x5d\x53\x61\xc6\x73\xdc\x13\x1e\x5c\x16\x60\x46\x32\xc6\x48\x45\x0d\x18\x23\x1c\x42\x56\x1d\x55\x13\x05\x3a\x80\x32\x1e\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x5a\x59\x15\x52\x14\x32\x92\x4e\x5f\x5e\x15\x7a\x0e\x7a\xc6\x19\x5c\x06\x42\x33\x42\x00\x82\x01\x38\x08\x4c\x33\x9c\x40\xda\x09\x50\x08\x15\x33\x14\x32\x92\x09\x57\x44\x07\x70\xc6\x32\x52\x1c\x1f\x08\x1e\x29\x40\x60\x52\x00\x50\x08\x15\x33\x14\x29\xb8\x09\x50\x4a\x15\x33\x14\x32\x92\x5e\x08\x01\x47\x33\xd0\x60\xd6\x41\x57\x08\x47\x6a\xd2\x6a\x92\x42\x09\x08\x13\x3d\xdc\x59\xde\x09\x50\x08\x15\x33\x14\x32\x92\x09\x02\x4d\x5a\x53\x56\x32\x92\x43\x5b\x43\x13\x42\xd4\x1b\xc0\x13\x09\x08\x0f\x3d\x44\x32\x80\x09\x50\x08\x15\x33\x14\x32\x92\x09\x13\x4f\x16\x78\x56\x32\x92\x43\x08\x47\x13\x33\x5a\x59\x46\x59\x38\x08\x4c\x33\xd0\x7b\xc6\x09\x50\x08\x15\x33\x14\x32\x92\x09\x42\x49\x46\x5b\xdc\x32\xd6\x50\x5b\x13\x47\x53\xd2\x28\x92\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x17\x59\x15\x61\x14\x32\x92\x4d\x42\x49\x1a\x5b\xd0\x1b\xc6\x45\x57\x4d\x47\x63\x14\x53\x88\x48\x5c\x01\x45\x33\x84\x42\x9a\x4f\x50\x4d\x58\x61\x14\x60\x1a\x41\x41\x1c\x1d\x21\x40\x53\x52\x09\x09\x08\x1c\x3d\x46\x23\xd4\x09\x50\x55\x15\x33\x14\x32\x92\x3b\x50\x08\x15\x33\x14\x32\x92\x09\x13\x5c\x59\x52\x42\x52\x5a\x5d\x50\x08\x15\x33\x3e\x32\x48\x09\x50\x08\x15\x33\x14\x32\x92\x4b\x02\x08\x12\x29\x50\x59\xc0\x00\x02\x51\x52\x52\x14\x62\xca\x09\x56\x3a\x1e\x28\x58\x61\x5c\x09\x50\x08\x15\x33\x14\x32\x92\x09\x53\x5b\x57\x70\x14\x32\x92\x4e\x56\x4b\x5b\x1a\xc0\x60\x5c\x5e\x50\x58\x4d\x40\x46\x5a\x5c\x58\x50\x08\x7d\x33\x8e\x42\x56\x09\x4f\x08\x15\x3d\x14\x32\x92\x09\x50\x4c\x15\x33\x14\x32\x92\x58\x5e\x1e\x12\x5b\xd6\x40\x9c\x42\x46\x4c\x56\x52\xd0\x53\xde\x09\x50\x08\x15\x33\x14\x69\xb8\x09\x50\x4a\x15\x33\x14\x32\x92\x48\x1f\x5e\x47\x42\xd2\x71\x58\x4d\x1f\x12\x1b\x61\xda\x1b\x50\x09\x1b\x3a\x56\x28\xd4\x70\xde\x09\x50\x08\x15\x33\x14\x32\x92\x54\x50\x1f\x15\x0b\x14\x3c\x92\x42\x0c\x14\x12\x3d\x58\x42\x4a\x1e\x0c\x14\x0e\x3d\x50\x70\x5c\x1e\x0c\x4e\x1b\x3d\xd8\x7a\xc6".to_vec(), 1)));
        }
    }
    Ok(Template::render(
        "flag",
        context! {
            flag
        },
    ))
}

#[post("/flag", data = "<cells>")]
pub fn test(referer: Referer, cells: Form<Vec<bool>>) -> String {
    let r = insecurity::deobfuscate(
        b"\x41\x1f\x5d\x56\x5a\x14\x73\x40\x4c\x1c\x1e\x16\x19\x93\x32\x71".to_vec(),
        0,
    );
    if let Some(mut hurle) = referer.url {
        if hurle.len() % 8 != 0 {
            for _ in 0..(8 - hurle.len() % 8) {
                hurle.push('f');
            }
        }
        if security::obfuscate(hurle) != b"\x59\x1d\x5c\x4d\x18\x44\x42\xc6\x5e\x1f\x44\x1f\x60\x58\x71\x52\x13\x1d\x5c\x05\x51\x04\x2a\x82\x48\x1b\x15\x16\x52\x52\x51\x0c\x4f\x14\x4d\x12\x7b\xc6\x73\xde\x59\x57\x5b\x5b\x72\xc6\x53\x6c\x50\x16\x4e\x53\x51\xd0\x4d\x5e" {
            r
        } else {
            if cells.len() != 12 * 12 {
                return insecurity::deobfuscate(b"\x67\x16\x59\x15\x72\xc6\x59\x46\x45\x1f\x44\x53\x61\x14\x53\x40\x1f\x16\x4e\x53\x51\x52\x18\x9c".to_vec(), 5);
            }

            let mut bouibouiboui = [
                1, 4, 9, 12, 11, 10, 10, 3, 4, 1, 3, 1, 1, 1, 1, 12, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 1, 1,
            ]
            .into_iter();
            let bouidoups = [
                true, false, false, false, false, false, true, true, false, false, false, false, false,
                false, false, false, false, false, false, false, false, false, true, true,
            ];
            let mut res = true;

            bouidoups.iter().enumerate().for_each(|(i, val)| {
                let cur = if i < 12 {
                    Vec::from(&cells[(i * 12)..(i + 1) * 12])
                } else {
                    cells
                        .chunks_exact(12)
                        .map(|c| c[i - 12])
                        .collect::<Vec<bool>>()
                };
                let mut my_my = bouibouiboui.next().unwrap();
                let mut f = 0;
                let mut step = 0;
                for i in 0..12 {
                    if !cur[i] || step == 1 {
                        if step == 1 {
                            step += 1;
                        }
                        continue;
                    }
                    f += 1;
                    if f == my_my {
                        if i < 11 && cur[i + 1] {
                            break;
                        }
                        if *val {
                            if step == 0 {
                                my_my = bouibouiboui.next().unwrap();
                                f = 0;
                                step += 1;
                            } else {
                                f = 0;
                                step = 3;
                            }
                        } else {
                            f = 0;
                            step = 3;
                        }
                    }
                }
                if step != 3 || f != 0 {
                    res = false;
                }
            });

            if res {
                let mut a = cells
                    .chunks_exact(8)
                    .map(|bs| {
                        bs.iter()
                            .enumerate()
                            .fold(0, |f, (i, &b)| (f + (b as u8)) << i)
                    })
                    .collect::<Vec<u8>>();
                a.append(&mut vec![0; 6]);
                let dec: Decryptor<Aes192> = Decryptor::new(a.as_slice().into(), b"c2tpYmlkaXJpenp6".into());
                let mut enc = b"\x2a\x65\x7b\x34\x46\xb1\x33\xb3\xf3\x37\x53\x1a\xff\xf8\x8a\xda\x97\x8c\xd6\x0e\x6c\x5d\x47\x41\x04\x4d\x30\x37\x80\x0a\x1c\x47\x30\xda\xfc\x63\xd4\xe2\x8f\xef\xed\x6c\x70\x23\x44\xd2\x33\xed".to_vec();
                let dec = dec.decrypt_padded_mut::<Pkcs7>(&mut enc).unwrap();
                String::from_utf8(dec.to_vec()).unwrap()
            } else {
                insecurity::deobfuscate(b"\x61\x47\x59\x06\x58\x46\x59\x46\x09\x1c\x08\x59\x19\xc6\x62\x52\x7c\x50\x5f\x19\x59\xc6\x73\x5a\x5f\xd9\x5f\xf6\x60\x70\x18\x92\x5d\x16\x4e\x53\x51\x1a\xf5\x1b".to_vec(), 4)
            }
        }
    } else {
        r
    }
}
